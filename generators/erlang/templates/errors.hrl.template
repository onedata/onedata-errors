%%%-------------------------------------------------------------------
%%% This file has been automatically generated - DO NOT EDIT!!!
%%%
%%% @copyright (C) 2024 ACK CYFRONET AGH
%%% This software is released under the MIT license
%%% cited in 'LICENSE.txt'.
%%% @end
%%%-------------------------------------------------------------------
%%% @doc
%%% Error definitions to be used across all APIs in Onedata products.
%%% @end
%%%-------------------------------------------------------------------

-ifndef(ERRORS_HRL).
-define(ERRORS_HRL, 1).

-include("error_attrs.hrl").
-include("global_definitions.hrl").
-include("posix/errno.hrl").


-record(od_error_ctx, {{
    file :: string(),
    line :: integer(),
    timestamp :: time:iso8601(),
    version :: binary()
}}).

-record(od_error, {{
    type :: module(),
    args = undefined :: term(),
    ctx :: od_error:ctx()
}}).

-define(err_ctx(),
    #od_error_ctx{{
        file = ?FILE,
        line = ?LINE,
        timestamp = od_error:iso8601_now(),
        version = od_error:version()
    }}
).

-define(ERR, {{error, #od_error{{}}}}).
-define(ERR(Type), {{error, #od_error{{type = Type}}}}).
-define(ERR(Type, Args), {{error, #od_error{{type = Type, args = Args}}}}).
-define(ERR(Type, Args, Ctx), {{error, #od_error{{type = Type, args = Args, ctx = Ctx}}}}).


%%--------------------------------------------------------------------
%% Unknown / unexpected error
%%--------------------------------------------------------------------
% Used to carry errors that have the proper JSON error format, but do not match
% any error specified in this software version. This can happen if a newer
% server responds with an error to an older client, which does not know the
% error Id. The original JSON representing the error is retained and returned
% upon encoding.
-define(ERR_UNRECOGNIZED_ERROR(ErrorAsJson), 
    ?ERR(?ERR_UNRECOGNIZED_ERROR_TYPE, {{ErrorAsJson}})
).
-define(ERR_UNRECOGNIZED_ERROR(ErrCtx, ErrorAsJson), 
    ?ERR(?ERR_UNRECOGNIZED_ERROR_TYPE, {{ErrorAsJson}}, ErrCtx)
).

{macros}

-endif.
