%%%-------------------------------------------------------------------
%%% This file has been automatically generated - DO NOT EDIT!!!
%%%
%%% @copyright (C) 2024 ACK CYFRONET AGH
%%% This software is released under the MIT license
%%% cited in 'LICENSE.txt'.
%%% @end
%%%-------------------------------------------------------------------
%%% @doc
%%% This module defines od_error record interface - implemented for onedata 
%%% errors that are to be returned via API calls. Each such error should have a
%%% dedicated module implementing the callbacks.
%%% @end
%%%-------------------------------------------------------------------
-module(od_error).

-include("errors.hrl").

%% API
-export([format_description/2, format_csv/1, iso8601_now/0, version/0]).


-type http_code() :: 400 | 401 | 403 | 404 | 409 | 500 | 501 | 503.

-type errno() :: 
    ?OK | ?E2BIG | ?EACCES | ?EADDRINUSE | ?EADDRNOTAVAIL |
    ?EAFNOSUPPORT | ?EAGAIN | ?EALREADY | ?EBADF | ?EBADMSG | ?EBUSY |
    ?ECANCELED | ?ECHILD | ?ECONNABORTED | ?ECONNREFUSED | ?ECONNRESET |
    ?EDEADLK | ?EDESTADDRREQ | ?EDOM | ?EEXIST | ?EFAULT | ?EFBIG |
    ?EHOSTUNREACH | ?EIDRM | ?EILSEQ | ?EINPROGRESS | ?EINTR | ?EINVAL | ?EIO |
    ?EISCONN | ?EISDIR | ?EKEYEXPIRED | ?ELOOP | ?EMFILE | ?EMLINK | ?EMSGSIZE |
    ?ENAMETOOLONG | ?ENETDOWN | ?ENETRESET | ?ENETUNREACH | ?ENFILE | ?ENOBUFS |
    ?ENODATA | ?ENODEV | ?ENOENT | ?ENOEXEC | ?ENOLCK | ?ENOLINK | ?ENOMEM |
    ?ENOMSG | ?ENOPROTOOPT | ?ENOSPC | ?ENOSR | ?ENOSTR | ?ENOSYS | ?ENOTCONN |
    ?ENOTDIR | ?ENOTEMPTY | ?ENOTRECOVERABLE | ?ENOTSOCK | ?ENOTSUP | ?ENOTTY |
    ?ENXIO | ?EOPNOTSUPP | ?EOVERFLOW | ?EOWNERDEAD | ?EPERM | ?EPIPE |
    ?EPROTO | ?EPROTONOSUPPORT | ?EPROTOTYPE | ?ERANGE | ?EROFS | ?ESPIPE |
    ?ESRCH | ?ETIME | ?ETIMEDOUT | ?ETXTBSY | ?EWOULDBLOCK | ?EXDEV.

-type ctx() :: #od_error_ctx{{}}.

-export_type([http_code/0, errno/0, ctx/0]).

{error_group_type_specs}

-export_type([
    {error_group_type_exports}
]).


%%%===================================================================
%%% od_error behaviour definition
%%%===================================================================


%%--------------------------------------------------------------------
%% @doc
%% Encodes an error JSON object.
%% @end
%%--------------------------------------------------------------------
-callback to_json(t()) -> json_utils:json_map().


%%--------------------------------------------------------------------
%% @doc
%% Decodes an error from a JSON object.
%% @end
%%--------------------------------------------------------------------
-callback from_json(json_utils:json_map()) -> t().


%%--------------------------------------------------------------------
%% @doc
%% Returns HTTP code to be returned in REST response.
%% @end
%%--------------------------------------------------------------------
-callback to_http_code(t()) -> http_code().


%%--------------------------------------------------------------------
%% @doc
%% Returns POSIX errno associated with the error.
%% @end
%%--------------------------------------------------------------------
-callback to_errno(t()) -> false | {{true, errno()}}.


%%%===================================================================
%%% API
%%%===================================================================


-spec format_description(string(), [term()]) -> binary().
format_description(Format, Args) ->
    str_utils:ensure_suffix(str_utils:format_bin(Format, Args), <<".">>).


-spec format_csv([term()]) -> binary().
format_csv(Values) ->
    str_utils:join_as_binaries(Values, <<", ">>).


%%--------------------------------------------------------------------
%% @doc
%% Returns current timestamp in ISO8601 format.
%% @end
%%--------------------------------------------------------------------
-spec iso8601_now() -> time:iso8601().
iso8601_now() ->
    Seconds = native_node_clock:system_time_millis() div 1000,
    DateTime = time:seconds_to_datetime(Seconds),
    time:datetime_to_iso8601(DateTime).


%%--------------------------------------------------------------------
%% @doc
%% Returns version of error definitions.
%% @end
%%--------------------------------------------------------------------
-spec version() -> string().
version() ->
    "{version}".
